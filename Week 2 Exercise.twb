<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20182.18.0925.2120                               -->
<workbook original-version='18.1' source-build='2018.2.2 (20182.18.0925.2120)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <SortTagCleanup />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Orders (Superstore)' inline='true' name='federated.1rc2ahb13da01v18qkpba0nh32uy' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Superstore' name='excel-direct.04ywngb086llq51g5ecn519y0b87'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/ASU/CIS 515 - Business Analytics Strategy/Exercise + Assignments/Superstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.04ywngb086llq51g5ecn519y0b87' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9995:no:A1:U9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Index' datatype='integer' name='[Calculation_1203024089029074944]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.621827' measure-ordering='alphabetic' measure-percentage='0.378173' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Q1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore)' name='federated.1rc2ahb13da01v18qkpba0nh32uy' />
          </datasources>
          <datasource-dependencies datasource='federated.1rc2ahb13da01v18qkpba0nh32uy'>
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Order ID]' derivation='None' name='[none:Order ID:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rc2ahb13da01v18qkpba0nh32uy].[none:Order ID:nk]'>
            <groupfilter expression='SUM([Profit]) &gt; 0.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:Order ID:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1rc2ahb13da01v18qkpba0nh32uy].[none:State:nk]' direction='DESC' using='[federated.1rc2ahb13da01v18qkpba0nh32uy].[sum:Profit:qk]' />
          <slices>
            <column>[federated.1rc2ahb13da01v18qkpba0nh32uy].[none:Order ID:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1rc2ahb13da01v18qkpba0nh32uy].[sum:Profit:qk]</rows>
        <cols>[federated.1rc2ahb13da01v18qkpba0nh32uy].[none:State:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Q10'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore)' name='federated.1rc2ahb13da01v18qkpba0nh32uy' />
          </datasources>
          <datasource-dependencies datasource='federated.1rc2ahb13da01v18qkpba0nh32uy'>
            <column caption='Index' datatype='integer' name='[Calculation_1203024089029074944]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1203024089029074944]' derivation='User' name='[usr:Calculation_1203024089029074944:ok:1]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[federated.1rc2ahb13da01v18qkpba0nh32uy].[none:City:nk]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_1203024089029074944]' derivation='User' name='[usr:Calculation_1203024089029074944:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <computed-sort column='[federated.1rc2ahb13da01v18qkpba0nh32uy].[none:City:nk]' direction='DESC' using='[federated.1rc2ahb13da01v18qkpba0nh32uy].[sum:Profit:qk]' />
          <filter class='categorical' column='[federated.1rc2ahb13da01v18qkpba0nh32uy].[none:Segment:nk]'>
            <groupfilter function='member' level='[none:Segment:nk]' member='&quot;Corporate&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1rc2ahb13da01v18qkpba0nh32uy].[usr:Calculation_1203024089029074944:ok:1]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Calculation_1203024089029074944:ok:1]' member='1' />
              <groupfilter function='member' level='[usr:Calculation_1203024089029074944:ok:1]' member='2' />
              <groupfilter function='member' level='[usr:Calculation_1203024089029074944:ok:1]' member='3' />
              <groupfilter function='member' level='[usr:Calculation_1203024089029074944:ok:1]' member='4' />
              <groupfilter function='member' level='[usr:Calculation_1203024089029074944:ok:1]' member='5' />
              <groupfilter function='member' level='[usr:Calculation_1203024089029074944:ok:1]' member='6' />
              <groupfilter function='member' level='[usr:Calculation_1203024089029074944:ok:1]' member='7' />
              <groupfilter function='member' level='[usr:Calculation_1203024089029074944:ok:1]' member='8' />
              <groupfilter function='member' level='[usr:Calculation_1203024089029074944:ok:1]' member='9' />
              <groupfilter function='member' level='[usr:Calculation_1203024089029074944:ok:1]' member='10' />
              <groupfilter function='member' level='[usr:Calculation_1203024089029074944:ok:1]' member='11' />
              <groupfilter function='member' level='[usr:Calculation_1203024089029074944:ok:1]' member='12' />
              <groupfilter function='member' level='[usr:Calculation_1203024089029074944:ok:1]' member='13' />
              <groupfilter function='member' level='[usr:Calculation_1203024089029074944:ok:1]' member='14' />
              <groupfilter function='member' level='[usr:Calculation_1203024089029074944:ok:1]' member='15' />
              <groupfilter function='member' level='[usr:Calculation_1203024089029074944:ok:1]' member='16' />
              <groupfilter function='member' level='[usr:Calculation_1203024089029074944:ok:1]' member='17' />
              <groupfilter function='member' level='[usr:Calculation_1203024089029074944:ok:1]' member='18' />
              <groupfilter function='member' level='[usr:Calculation_1203024089029074944:ok:1]' member='19' />
              <groupfilter function='member' level='[usr:Calculation_1203024089029074944:ok:1]' member='20' />
              <groupfilter function='member' level='[usr:Calculation_1203024089029074944:ok:1]' member='21' />
              <groupfilter function='member' level='[usr:Calculation_1203024089029074944:ok:1]' member='22' />
              <groupfilter function='member' level='[usr:Calculation_1203024089029074944:ok:1]' member='23' />
              <groupfilter function='member' level='[usr:Calculation_1203024089029074944:ok:1]' member='24' />
              <groupfilter function='member' level='[usr:Calculation_1203024089029074944:ok:1]' member='25' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1rc2ahb13da01v18qkpba0nh32uy].[none:Segment:nk]</column>
            <column>[federated.1rc2ahb13da01v18qkpba0nh32uy].[usr:Calculation_1203024089029074944:ok:1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1rc2ahb13da01v18qkpba0nh32uy].[sum:Profit:qk]</rows>
        <cols>([federated.1rc2ahb13da01v18qkpba0nh32uy].[usr:Calculation_1203024089029074944:ok] / [federated.1rc2ahb13da01v18qkpba0nh32uy].[none:City:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Q2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore)' name='federated.1rc2ahb13da01v18qkpba0nh32uy' />
          </datasources>
          <datasource-dependencies datasource='federated.1rc2ahb13da01v18qkpba0nh32uy'>
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Discount]' derivation='Avg' name='[avg:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Avg' name='[avg:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.1rc2ahb13da01v18qkpba0nh32uy].[none:State:nk]' direction='DESC' using='[federated.1rc2ahb13da01v18qkpba0nh32uy].[avg:Discount:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1rc2ahb13da01v18qkpba0nh32uy].[avg:Discount:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1rc2ahb13da01v18qkpba0nh32uy].[avg:Quantity:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1rc2ahb13da01v18qkpba0nh32uy].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1rc2ahb13da01v18qkpba0nh32uy].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1rc2ahb13da01v18qkpba0nh32uy].[avg:Discount:qk] + ([federated.1rc2ahb13da01v18qkpba0nh32uy].[avg:Quantity:qk] + ([federated.1rc2ahb13da01v18qkpba0nh32uy].[sum:Profit:qk] + [federated.1rc2ahb13da01v18qkpba0nh32uy].[sum:Sales:qk])))</rows>
        <cols>[federated.1rc2ahb13da01v18qkpba0nh32uy].[none:State:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Q3'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore)' name='federated.1rc2ahb13da01v18qkpba0nh32uy' />
          </datasources>
          <datasource-dependencies datasource='federated.1rc2ahb13da01v18qkpba0nh32uy'>
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Discount]' derivation='Avg' name='[avg:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Avg' name='[avg:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rc2ahb13da01v18qkpba0nh32uy].[none:State:nk]'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;Arizona&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1rc2ahb13da01v18qkpba0nh32uy].[none:State:nk]' direction='DESC' using='[federated.1rc2ahb13da01v18qkpba0nh32uy].[avg:Discount:qk]' />
          <slices>
            <column>[federated.1rc2ahb13da01v18qkpba0nh32uy].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1rc2ahb13da01v18qkpba0nh32uy].[avg:Discount:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1rc2ahb13da01v18qkpba0nh32uy].[avg:Quantity:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1rc2ahb13da01v18qkpba0nh32uy].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1rc2ahb13da01v18qkpba0nh32uy].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1rc2ahb13da01v18qkpba0nh32uy].[avg:Discount:qk] + ([federated.1rc2ahb13da01v18qkpba0nh32uy].[avg:Quantity:qk] + ([federated.1rc2ahb13da01v18qkpba0nh32uy].[sum:Profit:qk] + [federated.1rc2ahb13da01v18qkpba0nh32uy].[sum:Sales:qk])))</rows>
        <cols>([federated.1rc2ahb13da01v18qkpba0nh32uy].[yr:Order Date:ok] / [federated.1rc2ahb13da01v18qkpba0nh32uy].[none:State:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Q4'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore)' name='federated.1rc2ahb13da01v18qkpba0nh32uy' />
          </datasources>
          <datasource-dependencies datasource='federated.1rc2ahb13da01v18qkpba0nh32uy'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Order ID]' derivation='CountD' name='[ctd:Order ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1rc2ahb13da01v18qkpba0nh32uy].[yr:Order Date:ok]' direction='ASC' using='[federated.1rc2ahb13da01v18qkpba0nh32uy].[ctd:Order ID:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>[federated.1rc2ahb13da01v18qkpba0nh32uy].[ctd:Order ID:qk]</rows>
        <cols>([federated.1rc2ahb13da01v18qkpba0nh32uy].[none:State:nk] / [federated.1rc2ahb13da01v18qkpba0nh32uy].[yr:Order Date:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Q5'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore)' name='federated.1rc2ahb13da01v18qkpba0nh32uy' />
          </datasources>
          <datasource-dependencies datasource='federated.1rc2ahb13da01v18qkpba0nh32uy'>
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Discount]' derivation='Avg' name='[avg:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1rc2ahb13da01v18qkpba0nh32uy].[yr:Order Date:ok]' direction='DESC' using='[federated.1rc2ahb13da01v18qkpba0nh32uy].[avg:Discount:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1rc2ahb13da01v18qkpba0nh32uy].[avg:Discount:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1rc2ahb13da01v18qkpba0nh32uy].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1rc2ahb13da01v18qkpba0nh32uy].[avg:Discount:qk] + [federated.1rc2ahb13da01v18qkpba0nh32uy].[sum:Profit:qk])</rows>
        <cols>[federated.1rc2ahb13da01v18qkpba0nh32uy].[yr:Order Date:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Q6'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore)' name='federated.1rc2ahb13da01v18qkpba0nh32uy' />
          </datasources>
          <datasource-dependencies datasource='federated.1rc2ahb13da01v18qkpba0nh32uy'>
            <column datatype='string' name='[Product ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Product ID]' derivation='None' name='[none:Product ID:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rc2ahb13da01v18qkpba0nh32uy].[none:Product ID:nk]'>
            <groupfilter expression='AVG([Quantity]) &gt;= 5.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:Product ID:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1rc2ahb13da01v18qkpba0nh32uy].[none:State:nk]' direction='DESC' using='[federated.1rc2ahb13da01v18qkpba0nh32uy].[sum:Profit:qk]' />
          <slices>
            <column>[federated.1rc2ahb13da01v18qkpba0nh32uy].[none:Product ID:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1rc2ahb13da01v18qkpba0nh32uy].[sum:Profit:qk]</rows>
        <cols>[federated.1rc2ahb13da01v18qkpba0nh32uy].[none:State:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Q7'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore)' name='federated.1rc2ahb13da01v18qkpba0nh32uy' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1rc2ahb13da01v18qkpba0nh32uy'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rc2ahb13da01v18qkpba0nh32uy].[none:Segment:nk]'>
            <groupfilter function='member' level='[none:Segment:nk]' member='&quot;Corporate&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1rc2ahb13da01v18qkpba0nh32uy].[none:State:nk]'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;Washington&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1rc2ahb13da01v18qkpba0nh32uy].[none:State:nk]</column>
            <column>[federated.1rc2ahb13da01v18qkpba0nh32uy].[none:Segment:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1rc2ahb13da01v18qkpba0nh32uy].[none:State:nk]' />
              <size column='[federated.1rc2ahb13da01v18qkpba0nh32uy].[none:City:nk]' />
              <text column='[federated.1rc2ahb13da01v18qkpba0nh32uy].[sum:Sales:qk]' />
              <geometry column='[federated.1rc2ahb13da01v18qkpba0nh32uy].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rc2ahb13da01v18qkpba0nh32uy].[Latitude (generated)]</rows>
        <cols>[federated.1rc2ahb13da01v18qkpba0nh32uy].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Q8'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore)' name='federated.1rc2ahb13da01v18qkpba0nh32uy' />
          </datasources>
          <datasource-dependencies datasource='federated.1rc2ahb13da01v18qkpba0nh32uy'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rc2ahb13da01v18qkpba0nh32uy].[none:Customer Name:nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Profit])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Customer Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1rc2ahb13da01v18qkpba0nh32uy].[none:Customer Name:nk]' direction='DESC' using='[federated.1rc2ahb13da01v18qkpba0nh32uy].[sum:Profit:qk]' />
          <slices>
            <column>[federated.1rc2ahb13da01v18qkpba0nh32uy].[none:Customer Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1rc2ahb13da01v18qkpba0nh32uy].[none:Customer Name:nk]</rows>
        <cols>[federated.1rc2ahb13da01v18qkpba0nh32uy].[sum:Profit:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Q9'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore)' name='federated.1rc2ahb13da01v18qkpba0nh32uy' />
          </datasources>
          <datasource-dependencies datasource='federated.1rc2ahb13da01v18qkpba0nh32uy'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rc2ahb13da01v18qkpba0nh32uy].[none:Customer Name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Aaron Bergman&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Aaron Hawkins&quot;' />
              <groupfilter from='&quot;Adam Bellavance&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Adrian Barton&quot;' />
              <groupfilter from='&quot;Adrian Shami&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Alan Dominguez&quot;' />
              <groupfilter from='&quot;Alan Hwang&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Aleksandra Gannaway&quot;' />
              <groupfilter from='&quot;Alice McCarthy&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Allen Goldenen&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Alyssa Tate&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Amy Cox&quot;' />
              <groupfilter from='&quot;Andrew Allen&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Andrew Roberts&quot;' />
              <groupfilter from='&quot;Andy Reiter&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Angele Hood&quot;' />
              <groupfilter from='&quot;Ann Chong&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Anna Andreadi&quot;' />
              <groupfilter from='&quot;Anna Häberlin&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Annie Zypern&quot;' />
              <groupfilter from='&quot;Anthony Jacobs&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Art Ferguson&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Arthur Gainer&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Arthur Prichep&quot;' />
              <groupfilter from='&quot;Ashley Jarboe&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Barry Blumstein&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Barry Französisch&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Barry Pond&quot;' />
              <groupfilter from='&quot;Bart Folk&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Becky Castell&quot;' />
              <groupfilter from='&quot;Becky Pak&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Benjamin Farhat&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Benjamin Venier&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Beth Fritzler&quot;' />
              <groupfilter from='&quot;Beth Thompson&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Bill Shonely&quot;' />
              <groupfilter from='&quot;Bill Tyler&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Bobby Odegard&quot;' />
              <groupfilter from='&quot;Brad Eason&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Bruce Geld&quot;' />
              <groupfilter from='&quot;Bryan Davis&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Carlos Daly&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Carol Adams&quot;' />
              <groupfilter from='&quot;Carol Triggs&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Charles Crestani&quot;' />
              <groupfilter from='&quot;Charles Sheldon&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Christine Kargatis&quot;' />
              <groupfilter from='&quot;Christine Sundaresam&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Christopher Martinez&quot;' />
              <groupfilter from='&quot;Christy Brittain&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Cindy Chapman&quot;' />
              <groupfilter from='&quot;Claire Gute&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Craig Yedwab&quot;' />
              <groupfilter from='&quot;Cynthia Arntzen&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Damala Kotsonis&quot;' />
              <groupfilter from='&quot;Dan Lawera&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Darren Budd&quot;' />
              <groupfilter from='&quot;Darren Powers&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Darrin Sayre&quot;' />
              <groupfilter from='&quot;Dave Brooks&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Dave Poirier&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;David Kendrick&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;David Smith&quot;' />
              <groupfilter from='&quot;Dean Braden&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Denny Joy&quot;' />
              <groupfilter from='&quot;Dianna Arnett&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Dianna Wilson&quot;' />
              <groupfilter from='&quot;Don Jones&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Dorothy Dickinson&quot;' />
              <groupfilter from='&quot;Dorris liebe&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Ed Ludwig&quot;' />
              <groupfilter from='&quot;Edward Hooks&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Eileen Kiefer&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Elizabeth Moffitt&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Ellis Ballard&quot;' />
              <groupfilter from='&quot;Emily Burns&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Erica Hackney&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Erica Smith&quot;' />
              <groupfilter from='&quot;Erin Creighton&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Fred Wasserman&quot;' />
              <groupfilter from='&quot;Gary Hwang&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Gary Zandusky&quot;' />
              <groupfilter from='&quot;Gene McClure&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Giulietta Dortch&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Grace Kelly&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Greg Guthrie&quot;' />
              <groupfilter from='&quot;Greg Matthias&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Guy Phonely&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Hallie Redmond&quot;' />
              <groupfilter from='&quot;Harold Engle&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Helen Wasserman&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Henry MacAllister&quot;' />
              <groupfilter from='&quot;Hilary Holden&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Jack Garza&quot;' />
              <groupfilter from='&quot;Jack O&apos;Briant&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Jason Klamczynski&quot;' />
              <groupfilter from='&quot;Jay Fein&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Jennifer Ferguson&quot;' />
              <groupfilter from='&quot;Jennifer Jackson&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Jeremy Ellison&quot;' />
              <groupfilter from='&quot;Jeremy Lonsdale&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Jill Matthias&quot;' />
              <groupfilter from='&quot;Jim Epp&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Jim Mitchum&quot;' />
              <groupfilter from='&quot;Jocasta Rupert&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;John Castell&quot;' />
              <groupfilter from='&quot;John Grady&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Jonathan Doherty&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Joy Bell-&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Joy Daniels&quot;' />
              <groupfilter from='&quot;Julia Barnett&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Justin Ellison&quot;' />
              <groupfilter from='&quot;Justin MacKendrick&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Karen Ferguson&quot;' />
              <groupfilter from='&quot;Karl Braun&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Katherine Murray&quot;' />
              <groupfilter from='&quot;Katrina Bavinger&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Kelly Collister&quot;' />
              <groupfilter from='&quot;Kelly Williams&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Laura Armstrong&quot;' />
              <groupfilter from='&quot;Laurel Elliston&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Lauren Leatherbury&quot;' />
              <groupfilter from='&quot;Lena Creighton&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Linda Cazamias&quot;' />
              <groupfilter from='&quot;Lindsay Castell&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Lisa DeCherney&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Liz Carlisle&quot;' />
              <groupfilter from='&quot;Liz Pelletier&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Lori Olson&quot;' />
              <groupfilter from='&quot;Luke Schmidt&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Maria Zettner&quot;' />
              <groupfilter from='&quot;Maribeth Schnelling&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Marina Lichtenstein&quot;' />
              <groupfilter from='&quot;Mark Cousins&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Matt Hagelstein&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Matthew Grinstein&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Maureen Gastineau&quot;' />
              <groupfilter from='&quot;Maurice Satty&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Michael Chen&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Michael Granlund&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Michael Moore&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Michael Nguyen&quot;' />
              <groupfilter from='&quot;Michael Paige&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Michelle Lonsdale&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Mick Brown&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Mick Hernandez&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Mike Caudle&quot;' />
              <groupfilter from='&quot;Mike Kennedy&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Mike Vittorini&quot;' />
              <groupfilter from='&quot;Mitch Webber&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Muhammed MacIntyre&quot;' />
              <groupfilter from='&quot;Nancy Lomonaco&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Natalie DeCherney&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Natalie Webber&quot;' />
              <groupfilter from='&quot;Nathan Gelder&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Neil Knudson&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Neoma Murray&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Nick Crebassa&quot;' />
              <groupfilter from='&quot;Nick Zandusky&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Nicole Hansen&quot;' />
              <groupfilter from='&quot;Nona Balk&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Nora Preis&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Pamela Coakley&quot;' />
              <groupfilter from='&quot;Parhena Norris&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Paul Gonzalez&quot;' />
              <groupfilter from='&quot;Paul MacIntyre&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Paul Van Hugh&quot;' />
              <groupfilter from='&quot;Pauline Johnson&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Pete Kriz&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Peter Bühler&quot;' />
              <groupfilter from='&quot;Peter McVee&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Philisse Overcash&quot;' />
              <groupfilter from='&quot;Phillip Breyer&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Ralph Kennedy&quot;' />
              <groupfilter from='&quot;Randy Ferguson&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Rick Wilson&quot;' />
              <groupfilter from='&quot;Rob Beeghly&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Roland Schwarz&quot;' />
              <groupfilter from='&quot;Ross DeVincentis&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Russell D&apos;Ascenzo&quot;' />
              <groupfilter from='&quot;Ryan Crowe&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Sally Knutson&quot;' />
              <groupfilter from='&quot;Sam Zeldin&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Sarah Foster&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Scot Coram&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Scott Cohen&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Scott Williamson&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Sean Christensen&quot;' />
              <groupfilter from='&quot;Sean Wendt&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Shahid Collister&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Shaun Chance&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Shaun Weien&quot;' />
              <groupfilter from='&quot;Shirley Daniels&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Shui Tom&quot;' />
              <groupfilter from='&quot;Sonia Cooley&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Speros Goranitis&quot;' />
              <groupfilter from='&quot;Stefanie Holloman&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Steven Ward&quot;' />
              <groupfilter from='&quot;Stewart Visinsky&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Sung Pak&quot;' />
              <groupfilter from='&quot;Susan Pistek&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Tamara Willingham&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Ted Butterfield&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Ted Trevino&quot;' />
              <groupfilter from='&quot;Theone Pippenger&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Toby Ritter&quot;' />
              <groupfilter from='&quot;Todd Boyes&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Tom Boeckenhauer&quot;' />
              <groupfilter from='&quot;Tom Stivers&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Tony Sayre&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Tracy Collins&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Tracy Poddar&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Tracy Zic&quot;' />
              <groupfilter from='&quot;Trudy Brown&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Valerie Mitchum&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Victor Preis&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Victoria Brennan&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Vivek Gonzalez&quot;' />
              <groupfilter from='&quot;Vivian Mathis&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Yoseph Carroll&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Zuschuss Donatelli&quot;' />
            </groupfilter>
          </filter>
          <rows>
            <shelf-sort direction='DESC' measure-to-sort-by='[federated.1rc2ahb13da01v18qkpba0nh32uy].[sum:Profit:qk]'>
              <dimensions-to-sort>
                <dimension>[federated.1rc2ahb13da01v18qkpba0nh32uy].[none:Customer Name:nk]</dimension>
              </dimensions-to-sort>
            </shelf-sort>
          </rows>
          <slices>
            <column>[federated.1rc2ahb13da01v18qkpba0nh32uy].[none:Customer Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1rc2ahb13da01v18qkpba0nh32uy].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rc2ahb13da01v18qkpba0nh32uy].[none:Customer Name:nk]</rows>
        <cols>[federated.1rc2ahb13da01v18qkpba0nh32uy].[sum:Profit:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Q1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rc2ahb13da01v18qkpba0nh32uy].[none:Order ID:nk]</field>
            <field>[federated.1rc2ahb13da01v18qkpba0nh32uy].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Q2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rc2ahb13da01v18qkpba0nh32uy].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Q3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rc2ahb13da01v18qkpba0nh32uy].[none:State:nk]</field>
            <field>[federated.1rc2ahb13da01v18qkpba0nh32uy].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Q4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rc2ahb13da01v18qkpba0nh32uy].[none:Order ID:nk]</field>
            <field>[federated.1rc2ahb13da01v18qkpba0nh32uy].[none:State:nk]</field>
            <field>[federated.1rc2ahb13da01v18qkpba0nh32uy].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Q5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1rc2ahb13da01v18qkpba0nh32uy].[yr:Order Date:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1rc2ahb13da01v18qkpba0nh32uy].[avg:Discount:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1rc2ahb13da01v18qkpba0nh32uy].[avg:Discount:qk]</field>
                  <field>[federated.1rc2ahb13da01v18qkpba0nh32uy].[sum:Profit:qk]</field>
                  <field>[federated.1rc2ahb13da01v18qkpba0nh32uy].[yr:Order Date:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>0.15828399397892387</value>
                <value>49543.974099999978</value>
                <value>2015</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1rc2ahb13da01v18qkpba0nh32uy].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Q6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rc2ahb13da01v18qkpba0nh32uy].[none:Product ID:nk]</field>
            <field>[federated.1rc2ahb13da01v18qkpba0nh32uy].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Q7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1rc2ahb13da01v18qkpba0nh32uy].[none:State:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1rc2ahb13da01v18qkpba0nh32uy].[none:City:nk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rc2ahb13da01v18qkpba0nh32uy].[none:Region:nk]</field>
            <field>[federated.1rc2ahb13da01v18qkpba0nh32uy].[none:Segment:nk]</field>
            <field>[federated.1rc2ahb13da01v18qkpba0nh32uy].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Q8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rc2ahb13da01v18qkpba0nh32uy].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Q9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.1rc2ahb13da01v18qkpba0nh32uy].[none:Customer Name:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Lela Donovan&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.1rc2ahb13da01v18qkpba0nh32uy].[none:Customer Name:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Ritsa Hightower&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.1rc2ahb13da01v18qkpba0nh32uy].[none:Customer Name:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Karen Seio&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1rc2ahb13da01v18qkpba0nh32uy].[none:Customer ID:nk]</field>
            <field>[federated.1rc2ahb13da01v18qkpba0nh32uy].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Q10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rc2ahb13da01v18qkpba0nh32uy].[none:City:nk]</field>
            <field>[federated.1rc2ahb13da01v18qkpba0nh32uy].[none:Segment:nk]</field>
            <field>[federated.1rc2ahb13da01v18qkpba0nh32uy].[usr:Calculation_1203024089029074944:ok:1]</field>
            <field>[federated.1rc2ahb13da01v18qkpba0nh32uy].[usr:Calculation_1203024089029074944:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Q1' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Q10' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAVEklEQVR4nO2dWW8j6XWGnyoWRYkStbXUaq0ttXqZnl5mPJ7xjA0bXmEMjAC+SBAgF0Fu
      c5ub/IX8hsC5MAIECZAgcIzYTuDEDrwkg6RX9SK19o0iRYqLuBdry4VEzahZpHpIipKmzgM0
      0KrD75xTVXyLxeJbXymO4zgIggdRFEVRz7oJQThLRACCpxEBCJ5GBHDGZBMxCoZ9bFkmnaRs
      2q6vd+wy8wvLB/93bFZfPSeSyJx6n19URABnzPz//IrVeJrlpSUie/uk4zv8/Gf/SiyRZH5h
      kUwmzX4mSzKdBSCfCJMsHIhj9cGvWMv60bB4/OATfvw3P2J9c4tkpkgqmcCWyxsnop11AwKk
      15+SMC9RevpLfKZNd7CTT/7jp0RSed796FssfPJrvvWHf8ZgP6y8WuH6e98GIBJOcOvj7zLU
      YfO734TR/H56u338169/RaAjwA8+/t4Zr9n5RwRwxgR7+/F39xAMTZI2Y+j7CfYKNtcnr6KG
      dAY7YfrmLbL7+zgjXeyWNO4HfQC889UP+MXP/oXb975EX/8gg10qkX3oLe0w+M4foShnvHIX
      AEV+B7g4FNM7vNwu8eW712q/yMzz+/+d58OPvoymigLqcaq/A+i6jm27f5ErFos1xzUSM02T
      crncllr1YuVyGdM0T61WV//Y0Zu/5hitm/e+dKfmm7/WONu2KZVKrrHztC9rHa8b7ePUBFAq
      ldq20SzLwjCMttSqFzMM41QFcJr5HMc5FwKwLKutB7O2XAVKxcNE4tWX6hzbYvXVCxZWt6ti
      ZinL40cPCcfTrjl3NlfJFKs3VHxnnQcPH5EtWVWxRGSDufnlqqsjeiHNowcPeDS3wOu72dRz
      PH30iFg6X5Uvk4jyZO4l+rFLlg6x7Q32MkVKuRRPnsxRKFuH62uyubRI3nTIpuJsRfY+rVMu
      srKyhuXYbK0s8GJx7ajPYi7N2uYOmUSMh48es184WG/HsQ7zHdRdXHyFfXiENMslVlbWMG1Y
      e/WMJ88XqLRZyec4NhtL86xs7R71sZ+IEt5Nktrd4sGD/+PVWvgwYhPZWCWVL5NNRnn85Bl5
      /UDstmWwvrxE0XKIbCzzcmmdyiYuF/Z5/PAhiUyRzeWXrG7vHsX293YO8hRLrK8sUTw6hh3k
      efpiiWJ+nyePDsZX+lief8bS+g6x8BqPnjynZFiH61zg+dPHhOP7OFaZxeW1o/UqZhM8fvSI
      dK7E/NxDni+uA20SgBZQyWcKVcsdx2F4bAqjsF8VU3wBZqaniEUiVTGjkGZtK0w+p1fFYskM
      b731Fj0B32sRi9XNXaYnR1E4roBAsJ93371DsCtQtUHSO1sER8bYdeljazvC2CU/K5uJz64V
      mqKSLxXZ3Axz7eooWzu7hxEbv2WQM8HxdaAXPj0oWJaNbRqYtkPf0DgBK0/p8MPExkdZLxDo
      7mN8KMRuPHW4/Sw6rDJZwyEd3WQ9kjwSjW1bOKaB6dhkixY3r8/gUysdHuQrZeMkSxpXhvo+
      3e5aF8VcmoGRSe7emMTfETxaL78DWb3Mzs4uw/2d7Cazh33YaJZBoVwmkiwQ1ONEcwdqM22V
      W2/NEtt+xb7Zi5GJUbYOmvQFepgc6mEvk8OPQeEzAugeGKFPKZExVW7cnCUeix2umMXw+DWM
      XIpg3zCDAYtErny4zjA9e510Ik50a4Od+Kf7xVY6uH5tkt1oFIMOrk+PA20SQKg3hNsZqaLA
      3m6EyenqL3WKT2M/laQj4Of1s775Z0/J5bKEY8nXIg6XB/tZXZxjK5Z7LWZTLhV5+XSOTLn6
      NGUvssPQldHqJrUOivtJ3C6pXLs2TWIvgWF99hNAJdTbXVkJAh1+nMPTB1XtoKenE1DoDfUe
      2yaBrm46O3yASjoRpX90mqD/INbdE0JTFRTVIpvT0XzKUb5QqAsHeDz3jGIqSjx9cKDp6Kzk
      c+gLBXn+5DF5/aCP4GE+2ypTzGV5/PTFUR+f3VebkRRTo/2Hf/no7T0Qg6b5yGRycLhnfFqA
      7mAA1A6mx4fYS+0fCVG1Dbai+9ycHUfTAmg+H5XTeKOQJad0M3V5iGBX4Ng2zKZidF25Sr9q
      sBVNc2P26mFIYy+yyfjMdVTHoGTYVBIqOOxEdpmZGObZwgqp3Z2jT0uMEtGUzvWZMYIBjQeP
      5g7WpXqPt56V+UXCcYPh8Uv0dvqPlpvlErFYnHTB5v79t/jsMbuY2SOeytI7NFaV7/6H3+Ta
      /h6m2lMV00tFdMvPQH/XaxE/k+PDxHIOQe31TwcH09fFaKizKl8wFEKPprg0OlQVK+azZMsB
      7r79mZhjsri8QqqscuvqFZ68WObW3fvYpRyWnmVhPYyTttE7DcI7e/RfHkcBsskoG9thCo5C
      OrKHltXp7XkbgN2tFcLhMJmSjVkoMDHSBRjY5Rwv18JYSZtvf/8PiOyEGekPkk7r5FK7bGyH
      yTkaTqGAv7ufTr9KGYhtrxIOhwn03GGgG+zOS0ftry2+ILyb4tLoKD19Q59+mbZ0FlbWySpd
      XB3qJpktMhzsBKtEuZBmcSOMP6cw5NdR+ycZC6mkkrC3FyOTzLIdnEEpbFDqGiKgKRSAWCxK
      Rnfo0By218JoAyp3ZsfANtjdjeEkMmR7ushkcmxHQ4QCCpT32YmlyZob9PlNsrrFSEDD0SG/
      v0cikQR/F9//+GPC4TB9wQ6SJYjHY6QzRSKdGvl8gb6BwcP9dUqk02nHMAzXWCKRqDmukVip
      VHJyuVxbatWL5XI5p1gstqVWq/OZpumkUinX2P7+flv3ZTabrTnGtu2W1YJT/gRIpVL4fK8f
      bSGXe/30pLmYYRjYto2uV38naHWtejFd11FVlUKh+vtOq2u1Ol/lMqjb1Z5isYiu623Zl6Zp
      1rwUehr78lQFMDAwgKa5lxgcHKw57vPGdF3HNE26u7tPvVa9WD6fx+fz0dlZfSp1Gn20Mp9l
      WWSzWfr7+6timUyGYDDYtn1pGAY9PdWnt3DwnlJq/MTdSB9ihhM8jQhA8DQiAMHTiAAETyMC
      EDyNCEDwNCIAwdOIAARP09APYdGtZeJ5H/duTbOx+JScNkxvh41SLtA3cYNQ4EBXsVSe38xt
      HRvb2x3go5uX3NIKQttpSABXJq+SX4lQLu5TULpQTYNodBWtb4rxDhXTNLFtm529HH//n8+P
      jZ0YDvHB7Fdq3sBS7+aWWrHKz+dusUbyNdMH0JY+Wp3Ptu0Tazkud2Odxjas10etG44a7aMh
      ARRyWTKZDLvkSSX2yJQ6uDF1lWIui27ZdGoaqqq6ekdAwefz4ff7XWI0FKv4V9xira5VL6Zp
      Ws1Yq2u1Op9lWSfWcrNCnMa+dBynZh+aprlaIRrtoyEBFPNFenuD9I2OMzFzk6JuoCrgV210
      y5G5JoQLQ0Nv1Usj41wa+fTvYNenR/qgy+sF4bwiV4EETyMCEDyNCEDwNCIAwdOIAARPIwIQ
      PI0IQPA0IgDB04gABE/TkABMvUAqk8M2dDbW18gWdEqlEmapQMmUxw0IF4eGBJBOJ4hE4lhG
      mY5AB6+WlgmHw7xaXEKeySBcJBryAg2NXGE/F0HrDJJaekWw+zLJ6DJqaAK/qhzZoS2reopy
      cE7FQit26OZiYof+HGytLLKysouqmuTLDn6/zpWpG/isIumiwUDQL3boU64ldujW9NGQACZn
      7zA5eweAmZk6z6sShHOOXAUSPI0IQPA0IgDB04gABE8jAhA8jQhA8DQiAMHTiAAETyMCEDyN
      CEDwNA1OjrtEZF/hztUBniysoHX1MdAdwNGzDM/cOZocVxDOOw1OjjtNvhzB3zPI9FgW3ddD
      dGUOX98UM5+ZHFfcoKdXS9ygremjIQHsRXcIh8MEtQJLkRKzMz0MXrmKWcyRK1uEAjI57mnX
      Ejdoa/poSADB0CD37vUSCAS416ujdXQycqkfn+JgInfECBeHxgTQHSJ4+FD2YPD4dLjuOhOE
      84l8WxU8jQhA8DQiAMHTiAAETyMCEDyNCEDwNCIAwdOIAARPIwIQPE1DAtALGSKxFI5js725
      hYVDLpejnE+TK9ut7lEQTo2GBJAv5MlmMth6nlQqgwHs7u4yv7xJ0C9eIOHi0JAXaHBoiNR+
      BF9niIGeTgCS0U2U0BgKMjmu2KEbj10IO/TWyhIbG3G6unysbGyQtH1MXHsLv63L5Lhih24q
      diHs0JOzbzM5e/D/sbHxRlIIwrlArgIJnkYEIHgaEYDgaUQAgqcRAQieRgQgeBoRgOBpRACC
      pxEBCJ6mIQHYtoVhmDiOg14qYtkH/h7HsrDsar+IIJxXGrJCxCPrRFION0cDPFmJEezpIxRQ
      sUpZxm/co7tDHKHCxaAhAYyMT5ErRcilitx+/0vElpZIRjdRe6cI+mVyXHGDNh67IG7QVyws
      hHnn7izzv/tv+ofHGLwyjVLOiRtU3KBNxS6IG/Quk7N3AZi4er2RFIJwLpCrQIKnEQEInkYE
      IHgaEYDgaUQAgqcRAQieRgQgeBoRgOBpRACCpxEBCJ6mIStEhVxih+fL2wyPTRFQLFSjQGhs
      llBAdCVcDJoSgKGXsFHY3g4TtDNofZOMdogbVNygjccuhBu0Qt/wOG93hVjbTtIb7KeQzWDY
      Nh2aJm7QU64lbtDW9NGUAMAiFk9z+/YN7LJOYOIKRcOmw3fyKZBhWhjm8WcJaG8wThBaSVMC
      UP1Bbt68cZipC4CeNxz709+/4m//fe7Ysu+8N8OffudGMy0JwudCDrmCp2nyFOh0mN+Ik8gU
      jy2bHRsgILcaCy3mXArgJ79d4JOX4WPL/vyH7/PhjcEz6kj4oiKnQIKnEQEInkYEIHgaEYDg
      aUQAgqcRAQiepikBOLZFLLpDQTfQdR2rXKRsyeS4wsWhOTt0dJVwRoP4Er3BAHohx+zt+63q
      TRBOnaYE4OsMkl/fIjQwTDK6gdo7SYdPeSM7tGXb1ZHDMbaL7da2LLFDn2I+sUM3gGlYqD4V
      yzK5PHEdn1l448lxfWr12ZdyOEZ1sbuqPp/YoU8xn9ihXTANA5+mYZoWfn/1S3tHpvjayFS9
      FIJwrqkpgFIuyT/9wz8zdec6hVKIj7/95Xb2JQhtoeZVIKNUItgTJJc1uHlruo0tCUL7qPkJ
      kC+Wmbk+i6lo+JBLm8IXk5qfAPHwKr/4+b8xv7hINLHfzp4EoW3U/AS499F3uDQ8widzy0yM
      jbSzJ0FoG3V/CV5eWuVb3/0qjx/O1XuZIFxY6l4GnZqa4NncIu++9067+jmRv/7pQ3LF8rFl
      f/zNWwyGAmfUkXCRqSuA+M4aO9kAl8ezMBRqV091+eTFNsns8fuFf/CVGRGA0BA1T4FiGwss
      x0rcvfcO18aH29mTILSNmgJ4+fwVX/nGe7yam8cw3Tw9UMwmWVxcZCu6R7FYxCzlKBpyyVS4
      ONQUwNT0JCsLm3R3mWxEEq6v8Xd2c/lSH6lkip2dHRYWV9DkDgPhAlHzO8C1O+9x7c4Jg/0B
      8ukUV2dvsPjgN6ihcTT1dN2gjsuPchWXoLhBG4+JG7QBHNukrHbRF1C5MnUDv108dTeogrsT
      UNM0cYM2ERM3aAMoqsbMzFUAJicnmkklCGeCnLELnkYEIHgaEYDgaUQAgqcRAQieRgQgeBoR
      gOBpRACCpxEBCJ7mXD4iqRF0w+LZi+1jyxQFblwJnlFHwkWgKQHYVom5x3MMjM/S5bPwWSU6
      BicIBdr/wZIt6PzV3/3u2DLNp/Kjv/he23sRLg5NCWB/e5WcGmSiK8Dm4lPU4DDvXFEOHJ22
      jW3XdoPabm5Q58CR6OY6rLgVXd2gtoWb8dRxnBMdhK2MVdyvtWKtrtXKfAf7y25LrXox69D1
      W6tHd4dx430096Bszc/QcD/rq0v09g6SLxZxAFVVj/5Vo6CqKori4gZVKjEXN2gl5taH4l5L
      UajjSm19rLK8XqzVtVqV701qtXO93GKKorR8nZsSQO/oDLvzLxmdmKYnoNKpWmSKFv3BSlr3
      B/sqioLLexxQXN/8h4MOY9VxRak17mD5WiTNLx+sHouMXurh67eHa9arnbN2rLKsVqzVtdrd
      +3no46QeP28fTduhb945/jyA83hrejSZ4+efLB1b9vbVIb5+W+519jpyGVTwNCIAwdOIAARP
      IwIQPI0IQPA0IgDB04gABE8jAhA8jQhA8DRNukF1nj+Zo2fkKsN9XXQoJkZHHz0doivhYtCU
      AIxigp7LN5kZD7G6ukouV+De/X5XN+d5pV6vrY6d93wn1ToPfdSLNTKmKQFovm6S0UUSqR7I
      RlFCYygoWNbJk+PWs0M3MjluPTu0Wx+nYZWuLLuoduh21aoXq0yO264+mhJAuVzGAXpDIXqH
      Bwigv/HkuO725cYnx61nn60Xk8lxD5DJcRugq2+YDz4QR6VwcZFvq4KnEQEInkYEIHgaEYDg
      aUQAgqcRAQieRgQgeBoRgOBpRACCp2l6clzbNDAdFVVxUBUHR9HwqTUmtxKEc0ZzD8p2HF49
      f4AeGCXUYWMWs0zeukdQBCBcEJoSQC4Rhp5hVN0kGd1E7Z2kS1MxzZPdoJabG9RuvxvUMAzX
      dWskVnEcusVaXavV+Sr7q14tN0vxaWzDen3Uc3w20kdzN8Tgo5xLkcipTI/NoBq5N3aD+tzc
      oKq4Qd80Jm7Q1vTRlAD6hkZ5Z2i0mRSCcKbIVSDB03xhHpHUKD/+xRN+8tuFY8t++I23+OGH
      U2fUkdBOPC8AoPpr9QW6p1loDjkFEjyNCEDwNCIAwdOIAARPIwIQPI0IQPA0IgDB0zQ3N2gh
      w7P5RS5PztLtB79jQM+QTI4rXBiae1K8P8DU5BjheIwsOmXLx/17w0fzftafaNU1chBzH3SY
      rzpaa+JWp5LPNVZnnHMQc5u/tFLPfW5Tp27s8+Y7qVar851U6zz0UXufNdZHc78EKyqlYhGf
      z0c5X8T09ZzYKPXelIdvPDcFHOV0y1irlnPyrMY1Ojx5XI2dcFLs8+R7k1qtyldxYZ6X9WpH
      LWhSAKVcimg8xcDIBL2X+gkoBumiyUDQj6IorhPgwsFy1eWmmcoYt6faK6p6EHOxQ6uHsVr5
      XGOVcW7W68Nx7nZuasYqtWrFPm++k2q1Mt+b1GrXep0Uc7NDN9pHUwLo7r/M++9fbiaFIJwp
      8m1V8DTiBq3D46UI+zn92LK3p4dlo32BkH1Zh3/89UterMePLfvLP/kat8d7zqgjodX8P29r
      DYrTqH4eAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Q2' width='192'>
      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
      6esH3iT/P8NSyciE4dFUAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Q3' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Q4' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q6' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q7' width='192'>
      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
      PB3KtUwIH/8D5QRAhEcD9YcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Q8' width='192'>
      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
      3vVQKwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q9' width='192'>
      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
      BM81/z9dmYAp1PAlPQAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
