<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20182.19.0313.1244                               -->
<workbook original-version='18.1' source-build='2018.2.8 (20182.19.0313.1244)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Profit Threshold' datatype='integer' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='10000'>
        <calculation class='tableau' formula='10000' />
        <members>
          <member value='20000' />
          <member value='30000' />
          <member value='10000' />
        </members>
      </column>
      <column caption='Sales Threshold' datatype='integer' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='470000'>
        <calculation class='tableau' formula='470000' />
        <members>
          <member value='140000' />
          <member value='230000' />
          <member value='280000' />
          <member value='470000' />
        </members>
      </column>
    </datasource>
    <datasource caption='EU Superstore' inline='true' name='federated.1ckbgmo0z89k2x1c5dglv0kd9xiy' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='EU Superstore' name='excel-direct.05ez8ga0omjrn51cff3nz0hjdaqd'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/ASU/CIS 515 - Business Analytics Strategy/Exercise + Assignments/EU Superstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.05ez8ga0omjrn51cff3nz0hjdaqd' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:T10001:no:A1:T10001:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='City' ordinal='8' />
            <column datatype='string' name='State' ordinal='9' />
            <column datatype='string' name='Country' ordinal='10' />
            <column datatype='string' name='Region' ordinal='11' />
            <column datatype='string' name='Product ID' ordinal='12' />
            <column datatype='string' name='Category' ordinal='13' />
            <column datatype='string' name='Sub-Category' ordinal='14' />
            <column datatype='string' name='Product Name' ordinal='15' />
            <column datatype='real' name='Sales' ordinal='16' />
            <column datatype='integer' name='Quantity' ordinal='17' />
            <column datatype='real' name='Discount' ordinal='18' />
            <column datatype='real' name='Profit' ordinal='19' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:T10001:no:A1:T10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='25% sub-cat sales' datatype='real' name='[Calculation_1377257109544484864]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='TOTAL(SUM([Sales]))/TOTAL(COUNTD([Sub-Category]))*0.25'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Well Performing' datatype='boolean' name='[Calculation_1377257109545762817]' role='measure' type='nominal'>
        <calculation class='tableau' formula='SUM([Profit]) &gt; [Parameters].[Parameter 1] and SUM([Sales]) &gt; [Parameters].[Parameter 2]' />
      </column>
      <column caption='Rank' datatype='integer' name='[Calculation_1377257109546811396]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='RANK(SUM([Profit]),&apos;desc&apos;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Avg Profit Margin Per Product' datatype='real' name='[Calculation_1377257109548363785]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG({ INCLUDE [Product ID]: SUM([Profit])/SUM([Sales])})' />
      </column>
      <column caption='4' datatype='integer' name='[Calculation_1377257109549256716]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='4' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Profit]' derivation='None' name='[none:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1377257109544484864]' derivation='User' name='[usr:Calculation_1377257109544484864:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <drill-paths>
        <drill-path name='Country, State, City'>
          <field>[Country]</field>
          <field>[State]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.48631' measure-ordering='alphabetic' measure-percentage='0.458931' parameter-percentage='0.0547588' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[usr:Calculation_1377257109544484864:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[usr:Calculation_1377257109549133835:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[none:Profit:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[sum:Profit:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Profit Threshold' datatype='integer' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='10000'>
          <calculation class='tableau' formula='10000' />
        </column>
        <column caption='Sales Threshold' datatype='integer' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='470000'>
          <calculation class='tableau' formula='470000' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Q1'>
      <table>
        <view>
          <datasources>
            <datasource caption='EU Superstore' name='federated.1ckbgmo0z89k2x1c5dglv0kd9xiy' />
          </datasources>
          <datasource-dependencies datasource='federated.1ckbgmo0z89k2x1c5dglv0kd9xiy'>
            <column caption='25% sub-cat sales' datatype='real' name='[Calculation_1377257109544484864]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='TOTAL(SUM([Sales]))/TOTAL(COUNTD([Sub-Category]))*0.25'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1377257109544484864]' derivation='User' name='[usr:Calculation_1377257109544484864:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[usr:Calculation_1377257109544484864:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[usr:Calculation_1377257109544484864:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[sum:Profit:qk] + [federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[usr:Calculation_1377257109544484864:qk])</rows>
        <cols>[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[none:Sub-Category:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Q10'>
      <table>
        <view>
          <datasources>
            <datasource caption='EU Superstore' name='federated.1ckbgmo0z89k2x1c5dglv0kd9xiy' />
          </datasources>
          <datasource-dependencies datasource='federated.1ckbgmo0z89k2x1c5dglv0kd9xiy'>
            <column caption='(SUM([Profit])/COUNTD([Order ID]))/(SUM([Sales])/COUNTD([Orde...' datatype='real' name='[Calculation_1377257109549703182]' role='measure' type='quantitative' user:unnamed='Q10'>
              <calculation class='tableau' formula='(SUM([Profit])/COUNTD([Order ID]))/(SUM([Sales])/COUNTD([Order ID]))' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1377257109549703182]' derivation='User' name='[usr:Calculation_1377257109549703182:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[none:Country:nk]' direction='DESC' using='[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[usr:Calculation_1377257109549703182:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[usr:Calculation_1377257109549703182:qk]</rows>
        <cols>[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[none:Country:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Q2'>
      <table>
        <view>
          <datasources>
            <datasource caption='EU Superstore' name='federated.1ckbgmo0z89k2x1c5dglv0kd9xiy' />
          </datasources>
          <datasource-dependencies datasource='federated.1ckbgmo0z89k2x1c5dglv0kd9xiy'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='None' name='[none:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='None' name='[none:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;Switzerland&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[none:Profit:qk]</rows>
        <cols>[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[none:Sales:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Q3'>
      <table>
        <view>
          <datasources>
            <datasource caption='EU Superstore' name='federated.1ckbgmo0z89k2x1c5dglv0kd9xiy' />
          </datasources>
          <datasource-dependencies datasource='federated.1ckbgmo0z89k2x1c5dglv0kd9xiy'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[sum:Sales:qk]</rows>
        <cols>[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[yr:Order Date:ok]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='false' fill-type='fill-missing' ignore-last='0' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
    </worksheet>
    <worksheet name='Q4'>
      <table>
        <view>
          <datasources>
            <datasource caption='EU Superstore' name='federated.1ckbgmo0z89k2x1c5dglv0kd9xiy' />
          </datasources>
          <datasource-dependencies datasource='federated.1ckbgmo0z89k2x1c5dglv0kd9xiy'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[none:Country:nk]'>
            <groupfilter expression='SUM([Sales])&gt;=100000 and SUM([Profit])&gt;=50000' function='filter' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[pcto:sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[none:Country:nk]</rows>
        <cols total='true'>[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[none:Sub-Category:nk]</cols>
        <percentages enabled='true' mode='row' />
      </table>
    </worksheet>
    <worksheet name='Q5'>
      <table>
        <view>
          <datasources>
            <datasource caption='EU Superstore' name='federated.1ckbgmo0z89k2x1c5dglv0kd9xiy' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Profit Threshold' datatype='integer' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='10000'>
              <calculation class='tableau' formula='10000' />
            </column>
            <column caption='Sales Threshold' datatype='integer' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='470000'>
              <calculation class='tableau' formula='470000' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ckbgmo0z89k2x1c5dglv0kd9xiy'>
            <column caption='Well Performing' datatype='boolean' name='[Calculation_1377257109545762817]' role='measure' type='nominal'>
              <calculation class='tableau' formula='SUM([Profit]) &gt; [Parameters].[Parameter 1] and SUM([Sales]) &gt; [Parameters].[Parameter 2]' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1377257109545762817]' derivation='User' name='[usr:Calculation_1377257109545762817:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[usr:Calculation_1377257109545762817:nk]'>
            <groupfilter function='member' level='[usr:Calculation_1377257109545762817:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[usr:Calculation_1377257109545762817:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[none:Country:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Q6'>
      <table>
        <view>
          <datasources>
            <datasource caption='EU Superstore' name='federated.1ckbgmo0z89k2x1c5dglv0kd9xiy' />
          </datasources>
          <datasource-dependencies datasource='federated.1ckbgmo0z89k2x1c5dglv0kd9xiy'>
            <column caption='Avg Profit Margin Per Product' datatype='real' name='[Calculation_1377257109548363785]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG({ INCLUDE [Product ID]: SUM([Profit])/SUM([Sales])})' />
            </column>
            <column datatype='string' name='[Product ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1377257109548363785]' derivation='User' name='[usr:Calculation_1377257109548363785:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[none:Sub-Category:nk]' direction='DESC' using='[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[usr:Calculation_1377257109548363785:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[usr:Calculation_1377257109548363785:qk]</rows>
        <cols>[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[none:Sub-Category:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Q7'>
      <table>
        <view>
          <datasources>
            <datasource caption='EU Superstore' name='federated.1ckbgmo0z89k2x1c5dglv0kd9xiy' />
          </datasources>
          <datasource-dependencies datasource='federated.1ckbgmo0z89k2x1c5dglv0kd9xiy'>
            <column caption='Rank' datatype='integer' name='[Calculation_1377257109546811396]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='RANK(SUM([Profit]),&apos;desc&apos;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='SUM([Profit])/SUM([Sales])' datatype='real' name='[Calculation_1377257109554200592]' role='measure' type='quantitative' user:unnamed='Q7'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1377257109546811396]' derivation='User' name='[usr:Calculation_1377257109546811396:ok:4]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[none:Product Name:nk]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_1377257109554200592]' derivation='User' name='[usr:Calculation_1377257109554200592:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Portugal&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[none:Product Name:nk]' direction='DESC' using='[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[usr:Calculation_1377257109554200592:qk]' />
          <filter class='categorical' column='[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[usr:Calculation_1377257109546811396:ok:4]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Calculation_1377257109546811396:ok:4]' member='1' />
              <groupfilter function='member' level='[usr:Calculation_1377257109546811396:ok:4]' member='2' />
              <groupfilter function='member' level='[usr:Calculation_1377257109546811396:ok:4]' member='3' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[usr:Calculation_1377257109546811396:ok:4]</column>
            <column>[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[usr:Calculation_1377257109554200592:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[none:Country:nk] / ([federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[usr:Calculation_1377257109546811396:ok:4] / [federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[none:Product Name:nk]))</rows>
        <cols>([federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[usr:Calculation_1377257109554200592:qk] + [federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[sum:Profit:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Q7.1'>
      <table>
        <view>
          <datasources>
            <datasource caption='EU Superstore' name='federated.1ckbgmo0z89k2x1c5dglv0kd9xiy' />
          </datasources>
          <datasource-dependencies datasource='federated.1ckbgmo0z89k2x1c5dglv0kd9xiy'>
            <column caption='Rank' datatype='integer' name='[Calculation_1377257109546811396]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='RANK(SUM([Profit]),&apos;desc&apos;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1377257109546811396]' derivation='User' name='[usr:Calculation_1377257109546811396:ok:9]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Pane' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Portugal&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[none:Product Name:nk]' direction='DESC' using='[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[sum:Profit:qk]' />
          <filter class='categorical' column='[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[usr:Calculation_1377257109546811396:ok:9]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Calculation_1377257109546811396:ok:9]' member='1' />
              <groupfilter function='member' level='[usr:Calculation_1377257109546811396:ok:9]' member='2' />
              <groupfilter function='member' level='[usr:Calculation_1377257109546811396:ok:9]' member='3' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[usr:Calculation_1377257109546811396:ok:9]</column>
            <column>[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[none:Country:nk] / ([federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[usr:Calculation_1377257109546811396:ok:9] / [federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[none:Product Name:nk]))</rows>
        <cols>[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[sum:Profit:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Q8'>
      <table>
        <view>
          <datasources>
            <datasource caption='EU Superstore' name='federated.1ckbgmo0z89k2x1c5dglv0kd9xiy' />
          </datasources>
          <datasource-dependencies datasource='federated.1ckbgmo0z89k2x1c5dglv0kd9xiy'>
            <column caption='Avg Profit Margin Per Product' datatype='real' name='[Calculation_1377257109548363785]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG({ INCLUDE [Product ID]: SUM([Profit])/SUM([Sales])})' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Product ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1377257109548363785]' derivation='User' name='[usr:Calculation_1377257109548363785:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[none:Category:nk]'>
            <groupfilter function='member' level='[none:Category:nk]' member='&quot;Furniture&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[usr:Calculation_1377257109548363785:qk]</rows>
        <cols>[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[yr:Order Date:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Q9'>
      <table>
        <view>
          <datasources>
            <datasource caption='EU Superstore' name='federated.1ckbgmo0z89k2x1c5dglv0kd9xiy' />
          </datasources>
          <datasource-dependencies datasource='federated.1ckbgmo0z89k2x1c5dglv0kd9xiy'>
            <column caption='(SUM([Sales])/COUNTD([Order ID]))/(SUM([Profit])/COUNTD([Orde...' datatype='real' name='[Calculation_1377257109549133835]' role='measure' type='quantitative' user:unnamed='Q9'>
              <calculation class='tableau' formula='(SUM([Sales])/COUNTD([Order ID]))/(SUM([Profit])/COUNTD([Order ID]))' />
            </column>
            <column caption='4' datatype='integer' name='[Calculation_1377257109549256716]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='4' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1377257109549256716]' derivation='None' name='[none:Calculation_1377257109549256716:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1377257109549133835]' derivation='User' name='[usr:Calculation_1377257109549133835:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Switzerland&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[none:Country:nk]' direction='DESC' using='[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[usr:Calculation_1377257109549133835:qk]' />
          <slices>
            <column>[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[none:Calculation_1377257109549256716:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[none:Calculation_1377257109549256716:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[usr:Calculation_1377257109549133835:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[usr:Calculation_1377257109549133835:qk] + [federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[none:Calculation_1377257109549256716:qk])</rows>
        <cols>[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[none:Country:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Q1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Q2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Q3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Q4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[none:Country:nk]</field>
            <field>[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Q5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[none:Country:nk]</field>
            <field>[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[usr:Calculation_1377257109545762817:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Q6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Q7'>
      <cards>
        <edge name='left'>
          <strip size='163'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[none:Country:nk]</field>
            <field>[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[none:Product Name:nk]</field>
            <field>[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[usr:Calculation_1377257109546811396:ok:3]</field>
            <field>[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[usr:Calculation_1377257109546811396:ok:4]</field>
            <field>[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[usr:Calculation_1377257109546811396:ok:5]</field>
            <field>[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[usr:Calculation_1377257109546811396:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Q7.1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[none:Country:nk]</field>
            <field>[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[none:Product Name:nk]</field>
            <field>[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[usr:Calculation_1377257109546811396:ok:9]</field>
            <field>[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[usr:Calculation_1377257109546811396:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Q8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[none:Category:nk]</field>
            <field>[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Q9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[none:Calculation_1377257109549256716:qk]</field>
            <field>[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[none:Country:nk]</field>
            <field>[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[sum:Calculation_1377257109549256716:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Q10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ckbgmo0z89k2x1c5dglv0kd9xiy].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Q1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q10' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q3' width='192'>
      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
    </thumbnail>
    <thumbnail height='124' name='Q4' width='192'>
      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
    </thumbnail>
    <thumbnail height='84' name='Q5' width='184'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q6' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q7' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q7.1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q8' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q9' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAVdklEQVR4nO3deXAW933H8ffuc186Ad0SEgKEuDE35sYYxweOr0yc1klzdtJmpsdMmnSm
      /SuTmbb5K3WatOk4mcnUjhMnsR1sbHBssLkRp0AGSwaBBOi+nkfPvbv9g8NC8YjVsYLH+33N
      eMYsPPv9PdJ+9vjt7u+nGIZhIIQNKYqiqHe7EULcTRIAYWsSAGFrEgBhaxIAYWsSAGFrzrvd
      gM8yXUtw5uAemroNVm7YSHG25243SQwjRwCrGGnO7nqJfR1+li0oR0ua/6iupXjhhZ8ST+nW
      tU8AcgSwjJGIsPd4F9u/+2XKXApocQ698RKHGjvIr7yPzz9Yxt6dXTz0+XJ2vXyO6i1Z7Hv9
      MJ39PrasnMKePR/QqxTy1PIC3j11iWyXG6c2QOm6Zym4+g4NvqVsmVuAcre/aIaTI4BlDHQD
      1BtbqNbTyP5rfr72139FsHUf57ridHYMYJCku62PlMfPhieeYUa6E/fszSxZMp9vf2k7fiVG
      a3eS9Q89yop5xRzZf4yj9S1Ul+TIxj8BJAAWUTxBVs8J8Obuk3S1XeBaxIk73k9HRyd9cRd+
      j0I00kN782V6UykcDgcutxOHqgIKJBJ09IfRdYNp5VXkB91MqV6J2vkB3c5SSrLcd/srfiZI
      AKyiuFjy+FdZ7L7MW3tOY+RU8fTWORzdd5Tah79ITV4FC2anON6cYtXaeUxx5ZHlclO79n4K
      /E4e37aRfQfqUHIrWVFbCYDq8VPtSDBt6Tpcquz/J4IiD8NljpaTu9lzNYsvPbQC2f7HT1EU
      RQIgbEtRFOXPeoG6urqIxWKT3ph4PI7X6530uuLeYBgGyWQSj2dy75XcE0cAwzC4cuUKpaWl
      d7sp4i7RNI329naKi4snraa8DyBsTwIgbE0CIGxNAiBsTQIgbE0CIGxNAiBsTQIgbE0CIGxN
      AiBsTQIgbE0CIGxNAiBsTQIgbE0CIGxNAiBsTQIgbO2eHRir5+f/S7z+jGXr99+/hpxnnrZs
      /SIz3LMB0Pr6SXd0WLZ+PRy2bN0ic8gpkLA1CYCwNQmAsDUJgLA1CYCwNQmAsDUJgLA1CYCw
      NQmAsDUJgLA1CYCwNQmAsDUJgLA1CYCwNQmAsDUJgLA1CYCwNQmAsDWLAqBz/sAfefPoxVtL
      DCPJib1v8sorf6D+Ujd3fWpKkRH05CD7d/wfdZejt5YlI53s3fkav39tJ619iXGt35J3gqMd
      F+hN+VCGTPmq912k21fL9keyOXLoPNHSfAKOiasZd7vQHKNYoariTMQnrgECv9OFczS/gzsx
      dDovf4Q7lMNgQr+1uL21mSlz1nJfIMzJpguULp0z5hITHwA9xUcXu6iZVUHdtSGLw71klSzH
      5VXJDSSIJ8HjSqPr17+YpmnE459skLqumS4Z9vvYs3oZkUDA9GfUYBDH0UOm/724s0WFxawu
      LR/TZ3VdR9d1kskkAC6Xi1Skm8v9Lmorp1I3ZEdv6GmycnPweVwoRte42jzhAQhfrmPfyUaa
      mlJcGgwys3wqFVOCqB4vsZ4BjGI/iYQTlwuczuvlDcPA4XDcNlN8WDW/J3Gn0mQPRFBGcV7l
      8Plw+3zmPyBGpCoKBaGs236Ho6FpGqqq4na7by27UL+Pk+fjXKSbq84wS6s2EnCoGKikEgk0
      RwpVcY2r3RMegND0Vfztt1ZB7wXeuahQGlJobG6hunw2xqEdvH5eJX/GCkITWNmTSrHuyPFR
      fSb4wBbyHl8xcY0QE65m9eepWQ3JliMcjNfijrTxcSxI4bRC9u7fSb2hMnvZ5nHVsG5coJzp
      rF8IqgrTS4tAcbD2c9tJpnXcHg+KZYUnRuzYcbqe/4ll61c8bkp/9lPL1v9Z4ipZwhrDgUPx
      Uh5UcaohHthWQNpQ8Xrcd17BCKwLgKLiunEW43Je72xyuNz4xnfEmjSGpmHEYtYV0Mxf49id
      ojpvbKhObm4+Lo+XidiU5D6AsDUJgLA1CYCwNQmAsDUJgLA1CYCwNQmAsDUJgLA1CYCwNQmA
      sDUJgLA1CYCwNQmAsDUJgLC1e3aeYLvTIhH0cMSy9SsuF84p+ZatP1NIAO5RkV276f/Nby1b
      v7uqisIf/sCy9WcKOQUStiYBELYmARC2JgEQtiYBELYmARC2JgEQtiYBELYmARC2JgEQtiYB
      ELYmARC2JgEQtiYBELYmARC2JgEQtiYBELYmARC2JgEQtiYBELYmARC2ZsGoEGmaG+q52hen
      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
      AABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
